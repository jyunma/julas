DROP TABLE IF EXISTS `ADMIN`;

CREATE TABLE `ADMIN` (
	`ADMIN_ID`	VARCHAR(50)	NOT NULL,
	`ADMIN_PW`	VARCHAR(256)	NULL,
	`ADMIN_NAME`	VARCHAR(50)	NULL,
	`ADMIN_ROLE`	TINYINT	NULL,
	`LIB_ID`	VARCHAR(50)	NOT NULL
);

DROP TABLE IF EXISTS `LIB`;

CREATE TABLE `LIB` (
	`LIB_ID`	VARCHAR(50)	NOT NULL,
	`LIB_NAME`	VARCHAR(50)	NULL,
	`LIB_CODE`	VARCHAR(5)	NULL
);

DROP TABLE IF EXISTS `BOOK`;

CREATE TABLE `BOOK` (
	`BOOK_ID`	VARCHAR(50)	NOT NULL,
	`BOOK_NAME`	VARCHAR(500)	NULL,
	`BOOK_AUTHOR`	VARCHAR(50)	NULL,
	`BOOK_PUBLISHER`	VARCHAR(50)	NULL,
	`BOOK_YEAR`	VARCHAR(50)	NULL,
	`BOOK_CALLNUM`	VARCHAR(50)	NULL,
	`BOOK_ISBN`	VARCHAR(50)	NULL,
	`BOOK_STATE`	TINYINT	NULL,
	`BOOK_PRICE`	INT	NULL,
	`LIB_ID`	VARCHAR(50)	NOT NULL
);

DROP TABLE IF EXISTS `LOG`;

CREATE TABLE `LOG` (
	`LOG_ID`	INT	NOT NULL,
	`LOG_ACTION`	VARCHAR(50)	NULL,
	`LOG_TIMESTAMP`	TIMESTAMP	NULL,
	`ADMIN_ID`	VARCHAR(50)	NOT NULL,
	`USER_ID`	VARCHAR(50)	NOT NULL,
	`BOOK_ID`	VARCHAR(50)	NOT NULL
);

DROP TABLE IF EXISTS `USER`;

CREATE TABLE `USER` (
	`USER_ID`	VARCHAR(50)	NOT NULL,
	`USER_PW`	VARCHAR(256)	NULL,
	`USER_NAME`	VARCHAR(50)	NULL,
	`USER_ADDRESS`	VARCHAR(50)	NULL,
	`USER_PHONE`	VARCHAR(50)	NULL,
	`USER_BIRTH`	DATE	NULL,
	`USER_GENDER`	BOOLEAN	NULL,
	`USER_EMAIL`	VARCHAR(50)	NULL,
	`USER_STATE`	BOOLEAN	NULL,
	`USER_BANDATE`	TIMESTAMP	NULL,
	`USER_MEMO`	VARCHAR(500)	NULL
);

DROP TABLE IF EXISTS `MUTUAL_LOAN`;

CREATE TABLE `MUTUAL_LOAN` (
	`MUTUAL_ID`	INT	NOT NULL,
	`MUTUAL_REQUEST`	VARCHAR(50)	NOT NULL,
	`MUTUAL_GETTING`	VARCHAR(50)	NOT NULL,
	`MUTUAL_REQUEST_TIME`	TIMESTAMP	NULL,
	`MUTUAL_SENDING_TIME`	TIMESTAMP	NULL,
	`MUTUAL_GETTING_TIME`	TIMESTAMP	NULL,
	`MUTUAL_STATE`	TINYINT	NULL,
	`USER_ID`	VARCHAR(50)	NOT NULL,
	`BOOK_ID`	VARCHAR(50)	NOT NULL
);

DROP TABLE IF EXISTS `RECORD`;

CREATE TABLE `RECORD` (
	`RECORD_ID`	INT	NOT NULL,
	`BOOK_ID`	VARCHAR(50)	NOT NULL,
	`USER_ID`	VARCHAR(50)	NOT NULL,
	`RECORD_BORROW`	TIMESTAMP	NULL,
	`RECORD_DUE`	TIMESTAMP	NULL,
	`RECORD_RETURN`	TIMESTAMP	NULL,
	`RECORD_BORROW_BY`	VARCHAR(50)	NOT NULL,
	`RECORD_RETURN_BY`	VARCHAR(50)	NOT NULL,
	`RECORD_TIMESTAMP`	TIMESTAMP	NULL
);

DROP TABLE IF EXISTS `RSV`;

CREATE TABLE `RSV` (
	`RSV_ID`	INT	NOT NULL,
	`USER_ID`	VARCHAR(50)	NOT NULL,
	`BOOK_ID`	VARCHAR(50)	NOT NULL,
	`RSV_TIME`	TIMESTAMP	NULL,
	`RSV_CANCEL`	TIMESTAMP	NULL,
	`RSV_CANCEL_REASON`	VARCHAR(50)	NULL,
	`RSV_DUE`	TIMESTAMP	NULL,
	`RSV_STATUS`	TINYINT	NULL,
	`RSV_TIMESTAMP`	TIMESTAMP	NULL
);

ALTER TABLE `ADMIN` ADD CONSTRAINT `PK_ADMIN` PRIMARY KEY (
	`ADMIN_ID`
);

ALTER TABLE `LIB` ADD CONSTRAINT `PK_LIB` PRIMARY KEY (
	`LIB_ID`
);

ALTER TABLE `BOOK` ADD CONSTRAINT `PK_BOOK` PRIMARY KEY (
	`BOOK_ID`
);

ALTER TABLE `LOG` ADD CONSTRAINT `PK_LOG` PRIMARY KEY (
	`LOG_ID`
);

ALTER TABLE `USER` ADD CONSTRAINT `PK_USER` PRIMARY KEY (
	`USER_ID`
);

ALTER TABLE `MUTUAL_LOAN` ADD CONSTRAINT `PK_MUTUAL_LOAN` PRIMARY KEY (
	`MUTUAL_ID`
);

ALTER TABLE `RECORD` ADD CONSTRAINT `PK_RECORD` PRIMARY KEY (
	`RECORD_ID`
);

ALTER TABLE `RSV` ADD CONSTRAINT `PK_RSV` PRIMARY KEY (
	`RSV_ID`
);

ALTER TABLE `ADMIN` ADD CONSTRAINT `FK_LIB_TO_ADMIN_1` FOREIGN KEY (
	`LIB_ID`
)
REFERENCES `LIB` (
	`LIB_ID`
);

ALTER TABLE `BOOK` ADD CONSTRAINT `FK_LIB_TO_BOOK_1` FOREIGN KEY (
	`LIB_ID`
)
REFERENCES `LIB` (
	`LIB_ID`
);

ALTER TABLE `LOG` ADD CONSTRAINT `FK_ADMIN_TO_LOG_1` FOREIGN KEY (
	`ADMIN_ID`
)
REFERENCES `ADMIN` (
	`ADMIN_ID`
);

ALTER TABLE `LOG` ADD CONSTRAINT `FK_USER_TO_LOG_1` FOREIGN KEY (
	`USER_ID`
)
REFERENCES `USER` (
	`USER_ID`
);

ALTER TABLE `LOG` ADD CONSTRAINT `FK_BOOK_TO_LOG_1` FOREIGN KEY (
	`BOOK_ID`
)
REFERENCES `BOOK` (
	`BOOK_ID`
);

ALTER TABLE `MUTUAL_LOAN` ADD CONSTRAINT `FK_LIB_TO_MUTUAL_LOAN_1` FOREIGN KEY (
	`MUTUAL_REQUEST`
)
REFERENCES `LIB` (
	`LIB_ID`
);

ALTER TABLE `MUTUAL_LOAN` ADD CONSTRAINT `FK_LIB_TO_MUTUAL_LOAN_2` FOREIGN KEY (
	`MUTUAL_GETTING`
)
REFERENCES `LIB` (
	`LIB_ID`
);

ALTER TABLE `MUTUAL_LOAN` ADD CONSTRAINT `FK_USER_TO_MUTUAL_LOAN_1` FOREIGN KEY (
	`USER_ID`
)
REFERENCES `USER` (
	`USER_ID`
);

ALTER TABLE `MUTUAL_LOAN` ADD CONSTRAINT `FK_BOOK_TO_MUTUAL_LOAN_1` FOREIGN KEY (
	`BOOK_ID`
)
REFERENCES `BOOK` (
	`BOOK_ID`
);

ALTER TABLE `RECORD` ADD CONSTRAINT `FK_BOOK_TO_RECORD_1` FOREIGN KEY (
	`BOOK_ID`
)
REFERENCES `BOOK` (
	`BOOK_ID`
);

ALTER TABLE `RECORD` ADD CONSTRAINT `FK_USER_TO_RECORD_1` FOREIGN KEY (
	`USER_ID`
)
REFERENCES `USER` (
	`USER_ID`
);

ALTER TABLE `RECORD` ADD CONSTRAINT `FK_ADMIN_TO_RECORD_1` FOREIGN KEY (
	`RECORD_BORROW_BY`
)
REFERENCES `ADMIN` (
	`ADMIN_ID`
);

ALTER TABLE `RECORD` ADD CONSTRAINT `FK_ADMIN_TO_RECORD_2` FOREIGN KEY (
	`RECORD_RETURN_BY`
)
REFERENCES `ADMIN` (
	`ADMIN_ID`
);

ALTER TABLE `RSV` ADD CONSTRAINT `FK_USER_TO_RSV_1` FOREIGN KEY (
	`USER_ID`
)
REFERENCES `USER` (
	`USER_ID`
);

ALTER TABLE `RSV` ADD CONSTRAINT `FK_BOOK_TO_RSV_1` FOREIGN KEY (
	`BOOK_ID`
)
REFERENCES `BOOK` (
	`BOOK_ID`
);

